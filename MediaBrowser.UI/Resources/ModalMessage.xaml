<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Modal background style. -->
    <Style TargetType="Grid" x:Key="ModalOverlayStyle">
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Opacity" Value=".4"/>
    </Style>

    <!--Modal Window style. -->
    <Style TargetType="Window" x:Key="ModalWindow">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontWeight" Value="{DynamicResource DefaultFontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Contained"/>
    </Style>

    <!--Modal content style. -->
    <Style TargetType="Grid" x:Key="ModalContentStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="#022255"/>
        <Setter Property="Opacity" Value=".96"/>
    </Style>

    <!--Modal content style. -->
    <Style TargetType="Grid" x:Key="ModalContentInnerStyle">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="MaxWidth" Value="800"/>
        <Setter Property="Margin" Value="0 20 0 20" />
    </Style>

    <!--Modal message caption style. -->
    <Style TargetType="TextBlock" x:Key="ModalTextStyle">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontWeight" Value="{DynamicResource DefaultFontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"/>
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0 20 0 20" />
    </Style>

    <!--Modal button image -->
    <Style TargetType="Image" x:Key="ModalButtonImage">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Stretch" Value="None"/>
        <Setter Property="Margin" Value="0 30 20 10" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding MessageBoxImage}" Value="Asterisk">
                <Setter Property="Source" Value="../Resources/Images/MessageBox/Asterisk.png">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MessageBoxImage}" Value="Information">
                <Setter Property="Source" Value="../Resources/Images/MessageBox/Information.png">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MessageBoxImage}" Value="Warning">
                <Setter Property="Source" Value="../Resources/Images/MessageBox/Warning.png">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MessageBoxImage}" Value="Exclamation">
                <Setter Property="Source" Value="../Resources/Images/MessageBox/Exclamation.png">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MessageBoxImage}" Value="Question">
                <Setter Property="Source" Value="../Resources/Images/MessageBox/Question.png">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MessageBoxImage}" Value="Stop">
                <Setter Property="Source" Value="../Resources/Images/MessageBox/Stop.png">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MessageBoxImage}" Value="Hand">
                <Setter Property="Source" Value="../Resources/Images/MessageBox/Hand.png">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MessageBoxImage}" Value="Error">
                <Setter Property="Source" Value="../Resources/Images/MessageBox/Error.png">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MessageBoxImage}" Value="None">
                <Setter Property="Source" Value="{x:Null}"></Setter>
                <Setter Property="Visibility" Value="Collapsed"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Modal content style. -->
    <Style TargetType="StackPanel" x:Key="ModalButtonPanel">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin" Value="0 20 0 30" />
    </Style>

    <!--Modal content style. -->
    <Style TargetType="Button" x:Key="ModalButton">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="20 0 0 0" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="2" Padding="20 5 20 5">
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#0069C5" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#0069C5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#0069C5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#0069C5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>