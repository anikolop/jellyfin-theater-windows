<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModels="clr-namespace:MediaBrowser.Theater.Presentation.ViewModels;assembly=MediaBrowser.Theater.Presentation"
                    xmlns:controls="clr-namespace:MediaBrowser.Theater.Presentation.Controls;assembly=MediaBrowser.Theater.Presentation"
                    xmlns:header="clr-namespace:MediaBrowser.Plugins.DefaultTheme.Header"
                    xmlns:osd="clr-namespace:MediaBrowser.Plugins.DefaultTheme.Osd"
                    xmlns:defaultTheme="clr-namespace:MediaBrowser.Plugins.DefaultTheme">

    <Style TargetType="Image" x:Key="CommunityRatingImage">
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Height" Value="30" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="Image" x:Key="CommunityRatingImageFull" BasedOn="{StaticResource CommunityRatingImage}">
        <Setter Property="Source" Value="Images/starFull.png" />
    </Style>
    <Style TargetType="Image" x:Key="CommunityRatingImageHalf" BasedOn="{StaticResource CommunityRatingImage}">
        <Setter Property="Source" Value="Images/starHalf.png" />
    </Style>
    <Style TargetType="Image" x:Key="CommunityRatingImageEmpty" BasedOn="{StaticResource CommunityRatingImage}">
        <Setter Property="Source" Value="Images/starEmpty.png" />
    </Style>
    <Style TargetType="Image" x:Key="LikeImage" BasedOn="{StaticResource CommunityRatingImage}">
        <Setter Property="Source" Value="Images/like.png" />
    </Style>
    <Style TargetType="Image" x:Key="DislikeImage" BasedOn="{StaticResource CommunityRatingImage}">
        <Setter Property="Source" Value="Images/dislike.png" />
    </Style>
    <Style TargetType="Image" x:Key="FavoriteImage" BasedOn="{StaticResource CommunityRatingImage}">
        <Setter Property="Source" Value="Images/favorite.png" />
    </Style>
    <Style TargetType="Image" x:Key="RottenImage" BasedOn="{StaticResource CommunityRatingImage}">
        <Setter Property="Source" Value="Images/rotten.png" />
    </Style>
    <Style TargetType="Image" x:Key="FreshImage" BasedOn="{StaticResource CommunityRatingImage}">
        <Setter Property="Source" Value="Images/fresh.png" />
    </Style>

    <Style TargetType="Border" x:Key="MediaInfoSeparator">
        <Setter Property="Height" Value="12" />
        <Setter Property="Width" Value="12" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Background" Value="#cc3333" />
        <Setter Property="Margin" Value="25 4 5 0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="ProgressBar" x:Key="ResumeProgressBar">
        <Setter Property="Foreground" Value="#cc3333"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="#666666"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Opacity" Value=".7"/>
    </Style>

    <ControlTemplate x:Key="FullscreenVideoOsdTemplate">
        <osd:FullscreenVideoTransportOsd DataContext="{Binding}"></osd:FullscreenVideoTransportOsd>
    </ControlTemplate>

    <!--Override PageContentTemplate-->
    <DataTemplate x:Key="PageContentTemplate" DataType="{x:Type defaultTheme:DefaultThemePageContentViewModel}">

        <Grid>
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Margin="25 10 0 0" Grid.Column="0" Grid.Row="0">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowGlobalContent}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowDefaultPageTitle}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ShowLogoImage}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <TextBlock Style="{DynamicResource Heading2TextBlockStyle}" Text="media"></TextBlock>
                        <TextBlock Style="{DynamicResource Heading2TextBlockStyle}" Text="browser" Foreground="#52B54B"></TextBlock>
                    </StackPanel>

                    <Image Source="{Binding LogoImage}" Margin="0 10 0 0" MaxHeight="70" MaxWidth="700" VerticalAlignment="Top" HorizontalAlignment="Left" Stretch="Uniform">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowLogoImage}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <TextBlock Text="{Binding PageTitle}" Margin="0 5 0 0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Heading2TextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowLogoImage}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ShowDefaultPageTitle}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

                <header:TopRightPanel Grid.Column="1" Panel.ZIndex="3" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0 0 30 0">
                    <header:TopRightPanel.Style>
                        <Style TargetType="{x:Type header:TopRightPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowGlobalContent}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </header:TopRightPanel.Style>
                </header:TopRightPanel>

                <!--Add the frame to hold the pages. The UI core expects this to appear somewhere within the template.-->
                <controls:PageContainer x:Name="PageContainer" Grid.Row="1" Grid.ColumnSpan="2"></controls:PageContainer>

            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ListItemTemplate" DataType="{x:Type viewModels:ItemViewModel}">
        <Grid>
            <Image HorizontalAlignment="Center" Source="{Binding Image}">
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Stretch" Value="UniformToFill"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasImage}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DownloadPrimaryImageAtExactSize}" Value="False">
                                <Setter Property="Stretch" Value="Uniform" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>

            <Border Background="#a6000000" Padding="10 0">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasImage}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <TextBlock Style="{DynamicResource TextBlockStyle}" Text="{Binding DisplayName}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White"></TextBlock>
            </Border>

            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Orientation="Vertical">
                <StackPanel.Background>
                    <SolidColorBrush Color="#A6000000"></SolidColorBrush>
                </StackPanel.Background>

                <TextBlock x:Name="TxtName" Foreground="White" Margin="10 5 10 0" TextWrapping="NoWrap" Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockStyle}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ItemType}" Value="Episode">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ItemType}" Value="Audio">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ItemType}" Value="IndexFolder">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ItemType}" Value="Person">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ViewType}" Value="Thumbstrip">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <ProgressBar x:Name="PlaybackProgress"  Minimum="0" Maximum="100" Value="{Binding PlayedPercentage, Mode=OneWay}" Margin="10 10 10 5">
                    <ProgressBar.Style>
                        <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ResumeProgressBar}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsInProgress}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFolder}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>

                <TextBlock x:Name="TxtDuration" Foreground="White" Margin="10 5 10 0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding DurationShortTimeString}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockStyle}">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Grid Height="10">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Visibility, ElementName=TxtName}" Value="Visible">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Visibility, ElementName=PlaybackProgress}" Value="Visible">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Visibility, ElementName=TxtDuration}" Value="Visible">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                </Grid>

            </StackPanel>

            <Grid VerticalAlignment="Top" HorizontalAlignment="Right" Background="#a6CC3333" Width="50" Height="50">

                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsOffline}" Value="True">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPlayed}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Path Data="M-150.204,626.126C-152.317,626.126 -154.429,626.126 -156.541,626.126 -167.642,633.42 -180.629,646.047 -189.668,657.238 -190.916,658.782 -192.945,662.362 -193.701,662.422 -194.041,662.448 -198.024,659.719 -198.614,659.297 -202.818,656.279 -205.779,653.709 -209.257,650.899 -211.248,652.172 -212.879,653.805 -214.153,655.797 -206.627,665.074 -200.283,675.534 -193.124,685.18 -181.491,665.11 -168.473,644.683 -152.796,629.006 -151.735,627.946 -149.817,626.933 -150.204,626.126z" Stretch="Uniform" Fill="#FFFFFFFF" Width="25" Height="25" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <TransformGroup.Children>
                                <RotateTransform Angle="0" />
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </TransformGroup.Children>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>

            <Grid Background="#a666C010" VerticalAlignment="Top" HorizontalAlignment="Right">

                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsOffline}" Value="True">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFolder}" Value="True">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsNew}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <TextBlock Style="{DynamicResource SmallTextBlockStyle}" Foreground="White" Margin="10 5">NEW</TextBlock>
            </Grid>

            <StackPanel Background="#a666C010" VerticalAlignment="Top" HorizontalAlignment="Right" Orientation="Horizontal">

                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsOffline}" Value="True">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFolder}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RecentlyAddedItemCount}" Value="0">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <TextBlock Style="{DynamicResource SmallTextBlockStyle}" Foreground="White" Margin="10 5 0 5" Text="{Binding RecentlyAddedItemCount}"></TextBlock>
                <TextBlock Style="{DynamicResource SmallTextBlockStyle}" Foreground="White" Margin="5 5 10 5">NEW</TextBlock>
            </StackPanel>

            <Grid Background="#a6cc3333" VerticalAlignment="Top" HorizontalAlignment="Right">

                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsOffline}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <TextBlock Style="{DynamicResource SmallTextBlockStyle}" Foreground="White" Margin="10 5">OFFLINE</TextBlock>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ListPageListViewItemTemplate" DataType="{x:Type viewModels:ItemViewModel}">

        <StackPanel Orientation="Vertical">
            <Grid Margin="5 5 15 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" Width="{Binding ImageWidth}" Height="{Binding ImageHeight}">
                    <Image Source="{Binding Image}">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Stretch" Value="UniformToFill"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasImage}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DownloadPrimaryImageAtExactSize}" Value="False">
                                        <Setter Property="Stretch" Value="Uniform" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Grid>

                <TextBlock Style="{DynamicResource TextBlockStyle}" Text="{Binding DisplayName}" Grid.Column="1" Margin="20 -5 0 0" VerticalAlignment="Center"></TextBlock>

                <StackPanel Grid.Column="2" Orientation="Horizontal">

                    <Grid Background="#a6cc3333" VerticalAlignment="Center" Margin="0 0 10 0" Height="50">

                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsOffline}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <TextBlock Style="{DynamicResource SmallTextBlockStyle}" Foreground="White" Margin="10 5" VerticalAlignment="Center">OFFLINE</TextBlock>
                    </Grid>

                    <ProgressBar Minimum="0" Maximum="100" Value="{Binding PlayedPercentage, Mode=OneWay}" Margin="0 0 10 0" Width="100" Height="50">
                        <ProgressBar.Style>
                            <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ResumeProgressBar}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsInProgress}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsFolder}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ProgressBar.Style>
                    </ProgressBar>

                    <Grid Background="#a6CC3333" Width="50" Height="50">

                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlayed}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Path Data="M-150.204,626.126C-152.317,626.126 -154.429,626.126 -156.541,626.126 -167.642,633.42 -180.629,646.047 -189.668,657.238 -190.916,658.782 -192.945,662.362 -193.701,662.422 -194.041,662.448 -198.024,659.719 -198.614,659.297 -202.818,656.279 -205.779,653.709 -209.257,650.899 -211.248,652.172 -212.879,653.805 -214.153,655.797 -206.627,665.074 -200.283,675.534 -193.124,685.18 -181.491,665.11 -168.473,644.683 -152.796,629.006 -151.735,627.946 -149.817,626.933 -150.204,626.126z" Stretch="Uniform" Fill="#FFFFFFFF" Width="25" Height="25" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <RotateTransform Angle="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </StackPanel>
            </Grid>

            <Border Background="#666" Height="2" Margin="0 0 0 0" Opacity=".6"></Border>
        </StackPanel>
    </DataTemplate>

    <!--List Page ListBox. -->
    <Style TargetType="controls:ExtendedListBox" x:Key="ListPageListBoxStyle" BasedOn="{StaticResource ListBoxStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ViewType}" Value="{x:Null}">
                <Setter Property="ItemTemplate" Value="{StaticResource ListItemTemplate}"></Setter>
                <Setter Property="ItemContainerStyle" Value="{StaticResource AnimatedListBoxItemStyle}"></Setter>
                <Setter Property="Margin" Value="-20 -20"></Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <controls:VirtualizingWrapPanel ItemHeight="{Binding ItemContainerHeight}" ItemWidth="{Binding ItemContainerWidth}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="50 50">
                                <controls:VirtualizingWrapPanel.Style>
                                    <Style TargetType="{x:Type controls:VirtualizingWrapPanel}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ScrollDirection}" Value="Vertical">
                                                <Setter Property="Orientation" Value="Horizontal" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ScrollDirection}" Value="Horizontal">
                                                <Setter Property="Orientation" Value="Vertical" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:VirtualizingWrapPanel.Style>
                            </controls:VirtualizingWrapPanel>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding ViewType}" Value="Poster">
                <Setter Property="ItemTemplate" Value="{StaticResource ListItemTemplate}"></Setter>
                <Setter Property="ItemContainerStyle" Value="{StaticResource AnimatedListBoxItemStyle}"></Setter>
                <Setter Property="Margin" Value="-20 -20"></Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <controls:VirtualizingWrapPanel ItemHeight="{Binding ItemContainerHeight}" ItemWidth="{Binding ItemContainerWidth}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="50 50">
                                <controls:VirtualizingWrapPanel.Style>
                                    <Style TargetType="{x:Type controls:VirtualizingWrapPanel}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ScrollDirection}" Value="Vertical">
                                                <Setter Property="Orientation" Value="Horizontal" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ScrollDirection}" Value="Horizontal">
                                                <Setter Property="Orientation" Value="Vertical" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:VirtualizingWrapPanel.Style>
                            </controls:VirtualizingWrapPanel>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding ViewType}" Value="Thumbstrip">
                <Setter Property="ItemTemplate" Value="{StaticResource ListItemTemplate}"></Setter>
                <Setter Property="ItemContainerStyle" Value="{StaticResource AnimatedListBoxItemStyle}"></Setter>
                <Setter Property="Margin" Value="0 60 0 0"></Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <controls:VirtualizingWrapPanel ItemHeight="{Binding ItemContainerHeight}" ItemWidth="{Binding ItemContainerWidth}" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="50 40">
                            </controls:VirtualizingWrapPanel>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding ViewType}" Value="List">
                <Setter Property="ItemTemplate" Value="{StaticResource ListPageListViewItemTemplate}"></Setter>
                <Setter Property="ItemContainerStyle" Value="{StaticResource HighlightedListBoxItemStyle}"></Setter>
                <Setter Property="Margin" Value="0 0 50 0"></Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            </VirtualizingStackPanel>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>


            <DataTrigger Binding="{Binding ScrollDirection}" Value="Vertical">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"></Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding ScrollDirection}" Value="Horizontal">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"></Setter>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"></Setter>
            </DataTrigger>

        </Style.Triggers>
    </Style>
</ResourceDictionary>