<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:osk="clr-namespace:MediaBrowser.Theater.Presentation.Controls.Osk"
                    xmlns:converters="clr-namespace:MediaBrowser.Theater.Presentation.Converters">

    <Style TargetType="{x:Type TextBlock}" x:Key="VirtualKeyboardTextBlock">
        <Setter Property="FontSize" Value="24" />
    </Style>

    <Style TargetType="{x:Type osk:VirtualKeyboard}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type osk:VirtualKeyboard}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter x:Name="PART_Content" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type osk:VirtualKeySet}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type osk:VirtualKeySet}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsControl x:Name="PART_Rows">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type osk:VirtualKeySetRow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type osk:VirtualKeySetRow}">
                    <ControlTemplate.Resources>
                        <osk:RowMarginConverter x:Key="MarginConverter" KeyWidth="80" />
                    </ControlTemplate.Resources>

                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsControl x:Name="PART_Keys">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:VirtualKeySetRow}}, Path=HorizontalOffset, Converter={StaticResource MarginConverter}}" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type osk:VirtualKey}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type osk:VirtualKey}">
                    <Grid>
                        <ContentPresenter x:Name="PART_PrimaryAction" />
                        <Popup x:Name="PART_AlternativesPopup" Placement="Right" StaysOpen="False" AllowsTransparency="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type osk:AlternateKeySelection}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type osk:AlternateKeySelection}">
                    <ItemsControl x:Name="PART_Keys" Background="#FF1F1F1F" MinHeight="60" MinWidth="80">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"
                                            FlowDirection="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:AlternateKeySelection}}, Path=FlowDirection}" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type osk:VirtualKeyAction}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type osk:VirtualKeyAction}">
                    <ControlTemplate.Resources>
                        <osk:MultiplyNumberConverter x:Key="WidthScaler" Multiplier="80" />
                    </ControlTemplate.Resources>

                    <Border MinHeight="60"
                            MinWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:VirtualKeyAction}}, Path=KeyWidth, Converter={StaticResource WidthScaler}}">
                        <Grid x:Name="Grid"
                              Background="#33FFFFFF"
                              Margin="2">
                            <ContentPresenter x:Name="PART_Visual" HorizontalAlignment="Center"
                                              VerticalAlignment="Center">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}"
                                           BasedOn="{StaticResource VirtualKeyboardTextBlock}" />
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#55FFFFFF" TargetName="Grid" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#55FFFFFF" TargetName="Grid" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#88FFFFFF" TargetName="Grid" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type osk:MinimalTextBox}">
        <Setter Property="CaretBrush" Value="White" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type osk:MinimalTextBox}">
                    <ControlTemplate.Resources>
                        <osk:RecipricalConverter x:Key="Invert" />
                    </ControlTemplate.Resources>

                    <Grid>
                        <Grid.LayoutTransform>
                            <ScaleTransform
                                ScaleX="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:VirtualKeyboardModalWindow}}, Path=ContentScale, Converter={StaticResource Invert}}"
                                ScaleY="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:VirtualKeyboardModalWindow}}, Path=ContentScale, Converter={StaticResource Invert}}" />
                        </Grid.LayoutTransform>
                        <ScrollViewer x:Name="PART_ContentHost" Margin="-2,0,0,0" />
                        <Border x:Name="PART_Caret" SnapsToDevicePixels="True"
                                Width="1"
                                Background="{TemplateBinding Foreground}"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Left" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type osk:VirtualKeyboardTextField}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type osk:VirtualKeyboardTextField}">
                    <ControlTemplate.Resources>
                        <osk:EmptyStringVisibilityConverter x:Key="StringToVisibility" />
                        <osk:FontScaleConverter x:Key="InverseFontScale" DesiredFontSize="24" />

                        <Storyboard x:Key="PART_ShowTransition">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame Value="0" KeyTime="00:00:0.2">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TextArea"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                           BeginTime="00:00:0.1">
                                <EasingDoubleKeyFrame Value="0" KeyTime="00:00:0.3">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Keyboard"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                           BeginTime="00:00:0.2">
                                <EasingDoubleKeyFrame Value="0" KeyTime="00:00:0.4">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="PART_HideTransition">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                           BeginTime="00:00:0.2">
                                <EasingDoubleKeyFrame Value="300" KeyTime="00:00:0.2">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TextArea"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                           BeginTime="00:00:0.1">
                                <EasingDoubleKeyFrame Value="300" KeyTime="00:00:0.3">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Keyboard"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame Value="300" KeyTime="00:00:0.4">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="Transparent">
                            <Border x:Name="Background" Background="#FF1F1F1F">
                                <Border.RenderTransform>
                                    <TranslateTransform Y="{Binding ActualHeight, ElementName=Background}" />
                                </Border.RenderTransform>
                            </Border>
                            <Grid Margin="20,10,20,20" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Grid x:Name="TextArea"
                                      Grid.Row="0" Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RenderTransform>
                                        <TranslateTransform Y="{Binding ActualHeight, ElementName=Background}" />
                                    </Grid.RenderTransform>

                                    <Grid.Resources>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource VirtualKeyboardTextBlock}" />
                                    </Grid.Resources>

                                    <TextBlock Grid.Column="0" Margin="0,0,10,0"
                                               Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:VirtualKeyboardTextField}}, Path=Title}"
                                               Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:VirtualKeyboardTextField}}, Path=Title, Converter={StaticResource StringToVisibility}}"
                                               Foreground="#52B54B" />

                                    <osk:MinimalTextBox x:Name="PART_TextBox" Grid.Column="1" VerticalAlignment="Top"
                                                        FontSize="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:VirtualKeyboardModalWindow}}, Path=ContentScale, Converter={StaticResource InverseFontScale}}" />
                                </Grid>

                                <osk:VirtualKeyboard x:Name="PART_Keyboard" Grid.Row="1">
                                    <osk:VirtualKeyboard.RenderTransform>
                                        <TranslateTransform Y="{Binding ActualHeight, ElementName=Background}" />
                                    </osk:VirtualKeyboard.RenderTransform>
                                </osk:VirtualKeyboard>
                            </Grid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard Storyboard="{StaticResource PART_ShowTransition}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="AccentColor">#1ba1e2</Color>
    <SolidColorBrush x:Key="Accent" Color="{StaticResource AccentColor}" />

    <Style TargetType="{x:Type osk:TextField}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="#262626" />
        <Setter Property="BorderBrush" Value="#444444" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2,1,1,1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
<!--        <Setter Property="behaviors:SuppressBackKeyBehavior.SuppressBackKey" Value="true" />-->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Border BorderThickness="1" BorderBrush="#FFdc000c" VerticalAlignment="Top">
                            <Grid>
                                <AdornedElementPlaceholder x:Name="adorner" Margin="-1" />
                            </Grid>
                        </Border>
                        <Border x:Name="errorBorder" Background="#FFdc000c" Margin="8,0,0,0"
                                Opacity="0" CornerRadius="0"
                                IsHitTestVisible="False"
                                MinHeight="24">
                            <TextBlock
                                Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                Foreground="White" Margin="8,2,8,3" TextWrapping="Wrap" VerticalAlignment="Center" />
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                            </DataTrigger.Binding>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="fadeInStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00.15"
                                                         Storyboard.TargetName="errorBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="fadeInStoryboard" />
                                <BeginStoryboard x:Name="fadeOutStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00"
                                                         Storyboard.TargetName="errorBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type osk:TextField}">
                    <Border x:Name="Bd"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.Resources>
                                <converters:StringNotEmptyToVisbilityConverter x:Key="StringEmptyConverter"/>
                            </Grid.Resources>
                            
                            <TextBlock
                                Margin="2,0,2,0"
                                Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:TextField}}, Path=VisibleText}"/>
                            <TextBlock
                                Margin="2,0,2,0"
                                Opacity="0.4"
                                Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:TextField}}, Path=Watermark}"
                                Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:TextField}}, Path=VisibleText, Converter={StaticResource StringEmptyConverter}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:TextField}}, Path=TextDisabledBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Accent}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:TextField}}, Path=BackgroundHoverBrush}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:TextField}}, Path=BorderHoverBrush}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type osk:TextField}}, Path=TextHoverBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>